{"uid":"6500f8122dcce262","name":"Поиск конкретного фильма/сериала","fullName":"test_ui#test_search_movie","historyId":"0062fe4e0ccade26bde97d0fd50367f7","time":{"start":1730324022927,"stop":1730324022927,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: No matching capabilities found\nStacktrace:\n\tGetHandleVerifier [0x00FC38B3+24035]\n\t(No symbol) [0x00F4BC44]\n\t(No symbol) [0x00E2C2D3]\n\t(No symbol) [0x00E9821C]\n\t(No symbol) [0x00E9762E]\n\t(No symbol) [0x00E98C62]\n\t(No symbol) [0x00E98B7A]\n\t(No symbol) [0x00E8FC26]\n\t(No symbol) [0x00E6218C]\n\t(No symbol) [0x00E6310D]\n\tGetHandleVerifier [0x012696D3+2800643]\n\tGetHandleVerifier [0x012C428E+3172286]\n\tGetHandleVerifier [0x012BCEA2+3142610]\n\tGetHandleVerifier [0x01066C60+692624]\n\t(No symbol) [0x00F54C5D]\n\t(No symbol) [0x00F51968]\n\t(No symbol) [0x00F51B00]\n\t(No symbol) [0x00F43FB0]\n\tBaseThreadInitThunk [0x7627FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77CE809E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77CE806E+238]","statusTrace":"@pytest.fixture(autouse=True)\n    def driver():\n>       browser = webdriver.Firefox(\n            service=ChromeService(ChromeDriverManager().install()))\n\nconftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\zahar\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\firefox\\webdriver.py:71: in __init__\n    super().__init__(command_executor=executor, options=options)\nC:\\Users\\zahar\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:208: in __init__\n    self.start_session(capabilities)\nC:\\Users\\zahar\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:292: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\nC:\\Users\\zahar\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001E8FC0EFA70>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: No matching capabili...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77CE809E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77CE806E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: No matching capabilities found\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00FC38B3+24035]\nE       \t(No symbol) [0x00F4BC44]\nE       \t(No symbol) [0x00E2C2D3]\nE       \t(No symbol) [0x00E9821C]\nE       \t(No symbol) [0x00E9762E]\nE       \t(No symbol) [0x00E98C62]\nE       \t(No symbol) [0x00E98B7A]\nE       \t(No symbol) [0x00E8FC26]\nE       \t(No symbol) [0x00E6218C]\nE       \t(No symbol) [0x00E6310D]\nE       \tGetHandleVerifier [0x012696D3+2800643]\nE       \tGetHandleVerifier [0x012C428E+3172286]\nE       \tGetHandleVerifier [0x012BCEA2+3142610]\nE       \tGetHandleVerifier [0x01066C60+692624]\nE       \t(No symbol) [0x00F54C5D]\nE       \t(No symbol) [0x00F51968]\nE       \t(No symbol) [0x00F51B00]\nE       \t(No symbol) [0x00F43FB0]\nE       \tBaseThreadInitThunk [0x7627FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77CE809E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77CE806E+238]\n\nC:\\Users\\zahar\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1730324022928,"stop":1730324027063,"duration":4135},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: No matching capabilities found\nStacktrace:\n\tGetHandleVerifier [0x00FC38B3+24035]\n\t(No symbol) [0x00F4BC44]\n\t(No symbol) [0x00E2C2D3]\n\t(No symbol) [0x00E9821C]\n\t(No symbol) [0x00E9762E]\n\t(No symbol) [0x00E98C62]\n\t(No symbol) [0x00E98B7A]\n\t(No symbol) [0x00E8FC26]\n\t(No symbol) [0x00E6218C]\n\t(No symbol) [0x00E6310D]\n\tGetHandleVerifier [0x012696D3+2800643]\n\tGetHandleVerifier [0x012C428E+3172286]\n\tGetHandleVerifier [0x012BCEA2+3142610]\n\tGetHandleVerifier [0x01066C60+692624]\n\t(No symbol) [0x00F54C5D]\n\t(No symbol) [0x00F51968]\n\t(No symbol) [0x00F51B00]\n\t(No symbol) [0x00F43FB0]\n\tBaseThreadInitThunk [0x7627FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77CE809E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77CE806E+238]\n\n","statusTrace":"  File \"C:\\Users\\zahar\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pluggy\\_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"C:\\Users\\zahar\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"C:\\Users\\zahar\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pluggy\\_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\zahar\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1122, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\zahar\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\fixtures.py\", line 877, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"E:\\Учёба все года\\Skypro\\Skypro_Diplom\\conftest.py\", line 12, in driver\n    browser = webdriver.Firefox(\n              ^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\zahar\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\firefox\\webdriver.py\", line 71, in __init__\n    super().__init__(command_executor=executor, options=options)\n  File \"C:\\Users\\zahar\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 208, in __init__\n    self.start_session(capabilities)\n  File \"C:\\Users\\zahar\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 292, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\zahar\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\zahar\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0}],"afterStages":[],"labels":[{"name":"suite","value":"UI-тесты на проверку сайта \"Кинопоиск\""},{"name":"tag","value":"positive_test"},{"name":"host","value":"DESKTOP-KLGMVKS"},{"name":"thread","value":"13868-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_ui"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["positive_test"]},"source":"6500f8122dcce262.json","parameterValues":[]}